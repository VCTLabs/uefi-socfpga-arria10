# This DS-5 script is just an example, feel free to modify to suit your need
#
#  Copyright (c) 2016, Intel Corporation. All rights reserved.
#
#  Redistribution and use in source and binary forms, with or without modification,
#  are permitted provided that the following conditions are met:
#
#  1. Redistributions of source code must retain the above copyright notice, this
#  list of conditions and the following disclaimer.
#
#  2. Redistributions in binary form must reproduce the above copyright notice, this
#  list of conditions and the following disclaimer in the documentation and/or other
#  materials provided with the distribution.
#
#  3. Neither the name of the copyright holder nor the names of its contributors may
#  be used to endorse or promote products derived from this software without specific
#  prior written permission.
#
#  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY
#  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
#  OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT
#  SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
#  INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED
#  TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR
#  BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
#  CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
#  ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH
#  DAMAGE.
#

# This DS-5 script is just an example, feel free to modify to suit your need

# Stop the CPU
stop

# Disable Reset System and break at Reset Vector
thbreak *0x0000000
reset reset.system
wait

# Disable MMU to ensure we don't download to cache
set var $CP15::$System::$SCTLR.M = 0
# Load the 256KB UEFI Binary Image to HPS's 256KB On-Chip RAM
restore Build/PEI.256 binary 0xFFE00000
# Set CPU program counter to On-Chip RAM entry point
set var $PC=0xFFE00000

# Load the debug symbol file
# The .dll is an ELF file, its entry point offset can be found this .map file under:
# Build\Stratix10SoCPkg\RELEASE_GCC48\Altera(R) Stratix(R) 10 SoC Development Board.map
# If you update the entry point offset, remove the LSB Thumb bit if it is 1. Eg: 0x00ffe0430d->0x00ffe0430c
symbol-file SEARCH_AND_REPLACE_ArmPlatformSec_dll SEARCH_AND_REPLACE_ArmPlatformSec_entrypoint
add-symbol-file SEARCH_AND_REPLACE_ArmPlatformPrePeiCore_dll SEARCH_AND_REPLACE_ArmPlatformPrePeiCore_entrypoint
add-symbol-file SEARCH_AND_REPLACE_AlteraSocFpgaPeiMain_dll SEARCH_AND_REPLACE_AlteraSocFpgaPeiMain_entrypoint
# Dump the Summary Report for symbol files we have loaded
info files

# Enable Semihosting, come in handy to debug PinMux and Clock before UART is up
# To see the message open the DS-5->Window->Show View->App Console
set semihosting enable true

# When some one start writing to UART Serial port means it is time to turn off semihosting
# Set a write watch break point on write to UART, HPS UART0 is 0xFFC02000, UART1 is 0xFFC02100.
watch *0xFFC02000
watch *0xFFC02100
# Start start running the firmware starting from entry point at 0xFFE00000
continue
# This script will wait until first firmware write to serial port before continue
wait
# Delete the write watch break point we have set earlier
clearwatch *0xFFC02000
clearwatch *0xFFC02100

# Disable semihosting because we have got UART and we prefer UART as semihosting is slow in printing
set semihosting enable false
# continue executing the firmware
continue
