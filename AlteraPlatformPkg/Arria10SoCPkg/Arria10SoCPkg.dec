#/** @file
#  Altera SoC FPGA Package
#
#  Portions of the code modified by Altera to support SoC devices are licensed as follows:
#  Copyright (c) 2015, Altera Corporation. All rights reserved.
#
#  Redistribution and use in source and binary forms, with or without modification,
#  are permitted provided that the following conditions are met:
#
#  1. Redistributions of source code must retain the above copyright notice, this
#  list of conditions and the following disclaimer.
#
#  2. Redistributions in binary form must reproduce the above copyright notice, this
#  list of conditions and the following disclaimer in the documentation and/or other
#  materials provided with the distribution.
#
#  3. Neither the name of the copyright holder nor the names of its contributors may
#  be used to endorse or promote products derived from this software without specific
#  prior written permission.
#
#  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY
#  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
#  OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT
#  SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
#  INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED
#  TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR
#  BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
#  CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
#  ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH
#  DAMAGE.
#
#  The original software modules are licensed as follows:
#
#  Copyright (c) 2012, ARM Limited. All rights reserved.
#
#  This program and the accompanying materials
#  are licensed and made available under the terms and conditions of the BSD License
#  which accompanies this distribution.  The full text of the license may be found at
#  http://opensource.org/licenses/bsd-license.php
#
#  THE PROGRAM IS DISTRIBUTED UNDER THE BSD 3 CLAUSE LICENSE ON AN "AS IS" BASIS,
#  WITHOUT WARRANTIES OR REPRESENTATIONS OF ANY KIND, EITHER EXPRESS OR IMPLIED.
#
#**/

[Defines]
  DEC_SPECIFICATION              = 0x00010005
  PACKAGE_NAME                   = AlteraSoCFpgaPkg
  PACKAGE_GUID                   = 45533DD0-C41F-4ab6-A5DF-65B52684AC60
  PACKAGE_VERSION                = 0.1

################################################################################
#
# Include Section - list of Include Paths that are provided by this package.
#                   Comments are used for Keywords and Module Types.
#
# Supported Module Types:
#  BASE SEC PEI_CORE PEIM DXE_CORE DXE_DRIVER DXE_RUNTIME_DRIVER DXE_SMM_DRIVER DXE_SAL_DRIVER UEFI_DRIVER UEFI_APPLICATION
#
################################################################################
[Includes.common]
  Include                        # Root include for the package

[Guids.common]
  gAlteraSocFpgaTokenSpaceGuid =  { 0xb89b8744, 0x4a1c, 0x4cd6, { 0xba, 0xa, 0x69, 0xb3, 0xfe, 0xe6, 0x91, 0x6b } }

  #
  # Following Guid must match FILE_GUID in MdeModulePkg/Universal/Variable/RuntimeDxe/VariableRuntimeDxe.inf
  #
  gVariableRuntimeDxeFileGuid = { 0xcbd2e4d5, 0x7068, 0x4ff5, { 0xb4, 0x62, 0x98, 0x22, 0xb4, 0xad, 0x8d, 0x60 } }

[PcdsFeatureFlag.common]

[PcdsFixedAtBuild.common]

  ## Debug message setting
  # @Prompt Enable Platform Init debug message
  gAlteraSocFpgaTokenSpaceGuid.PcdDebugMsg_BoardInit|1|UINT32|0xFEDC0000
  gAlteraSocFpgaTokenSpaceGuid.PcdDebugMsg_Boot|1|UINT32|0xFEDC0001
  gAlteraSocFpgaTokenSpaceGuid.PcdDebugMsg_BootSource|1|UINT32|0xFEDC0002
  gAlteraSocFpgaTokenSpaceGuid.PcdDebugMsg_ClockManager|1|UINT32|0xFEDC0003
  gAlteraSocFpgaTokenSpaceGuid.PcdDebugMsg_FDT|1|UINT32|0xFEDC0004
  gAlteraSocFpgaTokenSpaceGuid.PcdDebugMsg_Firewall|1|UINT32|0xFEDC0005
  gAlteraSocFpgaTokenSpaceGuid.PcdDebugMsg_FpgaManager|1|UINT32|0xFEDC0006
  gAlteraSocFpgaTokenSpaceGuid.PcdDebugMsg_MemoryController|1|UINT32|0xFEDC0007
  gAlteraSocFpgaTokenSpaceGuid.PcdDebugMsg_Pinmux|1|UINT32|0xFEDC0008
  gAlteraSocFpgaTokenSpaceGuid.PcdDebugMsg_ResetManager|1|UINT32|0xFEDC0009
  # PcdDebugMsg_SdMmc support value from 0..2. Value of 2 will print CMD and REPONSE
  gAlteraSocFpgaTokenSpaceGuid.PcdDebugMsg_SdMmc|1|UINT32|0xFEDC000a
  gAlteraSocFpgaTokenSpaceGuid.PcdDebugMsg_SecurityManager|1|UINT32|0xFEDC000b
  gAlteraSocFpgaTokenSpaceGuid.PcdDebugMsg_SystemManager|1|UINT32|0xFEDC000c
  gAlteraSocFpgaTokenSpaceGuid.PcdDebugMsg_Rbf|1|UINT32|0xFEDC000d
  gAlteraSocFpgaTokenSpaceGuid.PcdDebugMsg_Nand|1|UINT32|0xFEDC000e
  gAlteraSocFpgaTokenSpaceGuid.PcdDebugMsg_Qspi|1|UINT32|0xFEDC000f
  gAlteraSocFpgaTokenSpaceGuid.PcdDebugMsg_EmacSnpDxe|1|UINT32|0xFEDC0010

  ## Maximum FAT32 Partition Volumn cluster size:
  # Valid value are:
  #     0x1000 (4KB/8GB), 0x2000 (8KB/16GB), 0x4000 (16KB/32GB), 0x8000 (32KB/Legacy FAT32x)
  # NOTE:
  #     The larger the size the more firmware volumn and OCRAM space consumed
  gAlteraSocFpgaTokenSpaceGuid.PcdMaxFAT32ClusterSize|0x1000|UINT32|0xFEDC0020

  ## Memeory Test
  # @Prompt Enable Memory Test
  gAlteraSocFpgaTokenSpaceGuid.PcdEnableMemoryTest|1|UINT32|0xFEDC0021

  ## SD/MMC Clocks Phase Shift
  # Select which phase shift of the clock for cclk_in_drv:
  # --------------------|-------|
  # Descriptions        | Value |
  # --------------------|-------|
  # DRVSEL DEGREES 0    | 0x0   |
  # DRVSEL DEGREES 45   | 0x1   |
  # DRVSEL DEGREES 90   | 0x2   |
  # DRVSEL DEGREES 135  | 0x3   |
  # DRVSEL DEGREES 180  | 0x4   |
  # DRVSEL DEGREES 225  | 0x5   |
  # DRVSEL DEGREES 270  | 0x6   |
  # DRVSEL DEGREES 315  | 0x7   |
  # --------------------|-------|
  gAlteraSocFpgaTokenSpaceGuid.PcdSdmmcDrvSel|3|UINT32|0xFEDC0023

  # Select which phase shift of the clock for cclk_in_sample:
  # --------------------|-------|
  # Descriptions        | Value |
  # --------------------|-------|
  # SMPLSEL DEGREES 0   | 0x0   |
  # SMPLSEL DEGREES 45  | 0x1   |
  # SMPLSEL DEGREES 90  | 0x2   |
  # SMPLSEL DEGREES 135 | 0x3   |
  # SMPLSEL DEGREES 180 | 0x4   |
  # SMPLSEL DEGREES 225 | 0x5   |
  # SMPLSEL DEGREES 270 | 0x6   |
  # SMPLSEL DEGREES 315 | 0x7   |
  # --------------------|-------|
  gAlteraSocFpgaTokenSpaceGuid.PcdSdmmcSmplSel|2|UINT32|0xFEDC0024

  ## SD/MMC calibration helper
  # Sweep all possible values for drvsel and smplsel test if the card responds to CMD
  # @Prompt 1 - Enable,  0 - Disable
  gAlteraSocFpgaTokenSpaceGuid.PcdSdmmcSweepAllDrvselAndSmplselValues|0|UINT32|0xFEDC0025

  ## SD/MMC driver will try to use 4 bits mode if the card support.
  # @Prompt 0 - Use 1 bit mode,  1 - Use 4 bit mode when possible.
  gAlteraSocFpgaTokenSpaceGuid.PcdSdmmcSupport4BitMode|1|UINT32|0xFEDC0026

  ## Enable SD/MMC Internal DMA when doing Block Read
  # @Prompt 1 - Enable SD/MMC Internal DMA when doing Block Read
  # NOTE: Measurements shows that the different in time
  # between using SDMMC IDMA mode V.S. FIFO mode is not noticeable for 15 MB of data
  # the transfer speed bottleneck is actually in the SD/MMC Card clock frequency
  # So it is best to use FIFO mode for early boot to reduce complexity
  # If you do want to turn on SDMMC IDMA mode, it is tested working, but take note:
  #  1. beaware of CPU Data Cache, PEI phase is already default to off
  #  2. beaware of SoC architecture limit eg. CV SoC IDMA limit is 2GB (case:225558)
  gAlteraSocFpgaTokenSpaceGuid.PcdSdmmcBlockReadUseInternalDMA|0|UINT32|0xFEDC0027

  ## Is this Altera SoC FPGA Development Boards?
  # @Prompt Enable Altera SoC FPGA Development Boards specific code
  gAlteraSocFpgaTokenSpaceGuid.PcdIsAlteraSoCFPGADevelopmentBoards|0|UINT32|0xFEDC00FF

  ## Remap OCRAM
  # When set to 1, 0x0..0xFFFFF will not be availalbe to SDRAM HPS's OCRAM will be shadow here
  # In normal use case, should be disable by set to 0 to allow SDRAM to start from 0.
  gAlteraSocFpgaTokenSpaceGuid.PcdRemapOnChipRamTo1stOneMB|0|UINT32|0xFEDC0028

  ## QSPI transfer mode
  # @Prompt 0 - Standard Single SPI (SIO-SPI) mode (bits always transferred on DQ0 only). Supported by all SPI flash devices.
  # @Prompt 1 - Use Dual SPI (DIO-SPI) SPI mode where bits are transferred on DQ0 and DQ1.
  # @Prompt 2,  Use Quad SPI (QIO-SPI) SPI mode where bits are transferred on DQ0, DQ1, DQ2, and DQ3.
  gAlteraSocFpgaTokenSpaceGuid.PcdQspiMode|2|UINT32|0xFEDC0029

  ## QSPI Clock Frequency
  gAlteraSocFpgaTokenSpaceGuid.PcdQspiClkFreq|54|UINT32|0xFEDC002a

  ## Nand will not erase/read/write if more than this defined numbers of bad block are detected
  gAlteraSocFpgaTokenSpaceGuid.PcdNandStopIfMoreThanThisNumberBadBlocks|1|UINT32|0xFEDC002B

  ## QSPI/NAND Flash Offset
  gAlteraSocFpgaTokenSpaceGuid.PcdQspiOrNand_BOOTLOADER_PEIROM_ADDR |0x00000000|UINT64|0xFEDC0100
  gAlteraSocFpgaTokenSpaceGuid.PcdQspiOrNand_BOOTLOADER_DXEROM_ADDR |0x00680000|UINT64|0xFEDC0101

  ## QSPI/NAND Flash - BootImage DTB Offset and Size
  gAlteraSocFpgaTokenSpaceGuid.PcdQspiOrNand_LINUX_DTB_ADDR         |0x00100000|UINT64|0xFEDC0103
  gAlteraSocFpgaTokenSpaceGuid.PcdQspiOrNand_LINUX_DTB_SIZE         |0x00020000|UINT32|0xFEDC0113

  ## QSPI/NAND Flash - BootImage Offset and Size
  # Flash the Boot Image into QSPI using quartus_hps
  # Baremetal app example          : quartus_hps -c 1 -d 2 --o P --addr=0x00120000 bootimage.bin
  # GHS INTEGRITY RTOS example     : quartus_hps -c 1 -d 2 --o P --addr=0x00120000 kernel-uImage.bin
  # Wind River VxWorks RTOS example: quartus_hps -c 1 -d 2 --o P --addr=0x00120000 vxWorks.bin
  gAlteraSocFpgaTokenSpaceGuid.PcdQspiOrNand_BOOTIMAGE_ADDR         |0x00120000|UINT64|0xFEDC0104
  # If the image have mkimage header, the following value will be override by mkimage header
  # If the image do not have an mkimage header, it will base on the following PCD
  gAlteraSocFpgaTokenSpaceGuid.PcdQspiOrNand_BOOTIMAGE_SIZE         |0x01000000|UINT32|0xFEDC0114

  ## Various Filename in root directory of the SD/MMC FAT32 partition
  gAlteraSocFpgaTokenSpaceGuid.PcdFileName_DXE_ROM                 |"DXE.ROM"|VOID*|0xFEDC0201
  gAlteraSocFpgaTokenSpaceGuid.PcdFileName_LINUX_DTB               |"socfpga_arria10_socdk.dtb"|VOID*|0xFEDC0202
  gAlteraSocFpgaTokenSpaceGuid.PcdFileName_BOOTIMAGE_BIN           |"bootimage.bin"|VOID*|0xFEDC0203
  gAlteraSocFpgaTokenSpaceGuid.PcdFileName_ZIMAGE                  |"zImage"|VOID*|0xFEDC0204

  # Booting
  # If the image have mkimage header, it will based on mkimage header
  # If the image do not have an mkimage header, it will base on PCDs
  gAlteraSocFpgaTokenSpaceGuid.PcdBoot_BOOTIMAGE_MEM_LOAD_ADDR      |0x00100000|UINT32|0xFEDC0301
  gAlteraSocFpgaTokenSpaceGuid.PcdBoot_BOOTIMAGE_CPU_JUMP_ADDR      |0x00100000|UINT32|0xFEDC0302

  # Extra Boot Option for PEI Phase
  gAlteraSocFpgaTokenSpaceGuid.PcdBoot_LOAD_ZIMAGE_AT_PEI_PHASE     |0|UINT32|0xFEDC0303
  gAlteraSocFpgaTokenSpaceGuid.PcdBoot_LOAD_UEFI_DXE_PHASE          |0|UINT32|0xFEDC0304

  # Pit Stop Utility
  gAlteraSocFpgaTokenSpaceGuid.PcdEnablePitStopUtility|0|UINT32|0xFEDC0401

  ## HPS EMac Default Source Mac Address
  gAlteraSocFpgaTokenSpaceGuid.PcdDefaultMacAddress|0x021122334455|UINT64|0xFEDC0402

  ## HPS EMac Interface
  gAlteraSocFpgaTokenSpaceGuid.PcdDefaultMacInterface|0|UINT32|0xFEDC0403

  ## Early IO Release - Peripheral RBF is programmed first and Core RBF is programmed auto / manually later
  gAlteraSocFpgaTokenSpaceGuid.PcdAutoProgramCoreRbf               |1|UINT32|0xFEDC0404
  gAlteraSocFpgaTokenSpaceGuid.PcdFileName_CORE_RBF                |"ghrd_10as066n2.core.rbf"|VOID*|0xFEDC0405
  gAlteraSocFpgaTokenSpaceGuid.PcdQspiOrNand_CORE_RBF_ADDR         |0x00820000|UINT32|0xFEDC0406
  gAlteraSocFpgaTokenSpaceGuid.PcdSdramBaseAddress_CORE_RBF        |0x40|UINT64|0xFEDC0407

  ## FPGA Image Checksum
  gAlteraSocFpgaTokenSpaceGuid.PcdCheckFpgaImage                   |0x0|UINT32|0xFEDC0408
  gAlteraSocFpgaTokenSpaceGuid.PcdFileName_CORE_RBF_MKIMAGE        |"ghrd_10as066n2.core.rbf.mkimage"|VOID*|0xFEDC0409

  